/**
 * Document: MaxCompiler Training (maxcompiler-training.pdf)
 * Chapter: 2
 * Exercise Solution: 1
 * Summary:
 * 	 Kernel that performs a 3x3 mean blur of an image.
 */
package mean;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;

class MeanKernel extends Kernel {

	protected MeanKernel(KernelParameters parameters) {
		super(parameters);

		int height = 256, width = 256;

		DFEVar inImage = io.input("inImage", dfeInt(32));

		DFEVar Sum = constant.var(0);

		
		for (int x = -1; x <= 1; x++)
			for (int y = -1; y <= 1; y++)
				Sum = Sum + stream.offset(inImage, y * width + x);
	
		DFEVar result = Sum / 9;

		
		CounterChain chain = control.count.makeCounterChainMoreBits();
		DFEVar y = chain.addCounter(height, 1);
		DFEVar x = chain.addCounter(width, 1);

		result = ((x > 0 & x < width - 1) & (y > 0 & y < height - 1)) ? result
			: 0;

		io.output("outImage", result, result.getType());
	}
}
